Общее описание.

Необходимо сделать миграцию в отдельные логические таблицы, а затем собрать на них витрину данных. Это поможет оптимизировать нагрузку на хранилище и позволит аналитикам, перед которыми стоит задача построить анализ эффективности и прибыльности бизнеса, отвечать на точечные вопросы о тарифах вендоров, стоимости доставки в разные страны, количестве доставленных заказов за последнюю неделю.

Заказ в интернет-магазине — это набор купленных товаров и их количество. Покупатели привыкли получать заказы одномоментно, поэтому каждый заказ из набора товаров формируется в одну сущность доставки.
Интернет-магазину важно видеть, что сроки доставки соблюдаются, а её стоимость соответствует тарифам. Он платит за доставку самостоятельно, и стоимость доставки меняется в зависимости от страны — это базовая сумма, которую учитывает вендор. По договору он дополнительно получает прибыль за счет комиссии от вендора.



Исходные данные.

Таблица public.shipping.

Особенности данных:
Порядка 2% заказов исполняется с просрочкой, и это норма для вендоров. Вендор №3, у которого этот процент достигает 10%, скорее всего неблагонадёжен.
Около 2% заказов не доходят до клиентов.
В пределах нормы и то, что порядка 1.5% заказов возвращаются клиентами. При этом у вендора №21 50% возвратов. Он торгует электроникой и ноутбуками — очевидно, в его товарах много брака и стоит его изучить.

Задание.

Существующая таблица public.shipping избыточна. Её необходимо разложить по таблицам без избыточности, с учётом логики, над таблицами построить витрину.

Последовательность выполнения:

1. Создание справочника стоимости доставки в страны shipping_country_rates из данных, указанных в shipping_country и shipping_country_base_rate, сделать первичный ключ таблицы — серийный id, то есть серийный идентификатор каждой строчки.

2. Создание справочника тарифов доставки вендора по договору shipping_agreement из данных строки vendor_agreement_description через разделитель ":"
Названия полей:
agreementid,
agreement_number,
agreement_rate,
agreement_commission.
Agreementid сделать первичным ключом

3. Создание справочника о типах доставки shipping_transfer из строки shipping_transfer_description через разделитель ":"
Названия полей:
transfer_type,
transfer_model,
shipping_transfer_rate .
Сделайте первичный ключ таблицы — серийный id.

4. Создание справочника shipping_info с уникальными доставками shippingid и свяжите её с созданными справочниками shipping_country_rates, shipping_agreement, shipping_transfer и константной информацией о доставке shipping_plan_datetime , payment_amount , vendorid .

5. Создание справочника статусов о доставке shipping_status и включите туда информацию из лога shipping (status , state). Добавить туда вычислимую информацию по фактическому времени доставки shipping_start_fact_datetime, shipping_end_fact_datetime . Отразить для каждого уникального shippingid его итоговое состояние доставки.

6. Создание представления shipping_datamart на основании готовых таблиц для аналитики:
shippingid
vendorid
transfer_type — тип доставки из таблицы shipping_transfer
full_day_at_shipping — количество полных дней, в течение которых длилась доставка. Высчитывается как:shipping_end_fact_datetime-shipping_start_fact_datetime.
is_delay — статус, показывающий просрочена ли доставка. Высчитывается как:shipping_end_fact_datetime >> shipping_plan_datetime → 1 ; 0
is_shipping_finish — статус, показывающий, что доставка завершена. Если финальный status = finished → 1; 0
delay_day_at_shipping — количество дней, на которые была просрочена доставка. Высчитыается как: shipping_end_fact_datetime >> shipping_end_plan_datetime → shipping_end_fact_datetime -− shipping_plan_datetime ; 0).
payment_amount — сумма платежа пользователя
vat — итоговый налог на доставку. Высчитывается как: payment_amount *∗ ( shipping_country_base_rate ++ agreement_rate ++ shipping_transfer_rate) .
profit — итоговый доход компании с доставки. Высчитывается как: payment_amount*∗ agreement_commission.